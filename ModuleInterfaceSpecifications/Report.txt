Report Program MIS
==================

Normal behaviour
-----------------------------------------------------------------------

Interface:

This program is executed with output enabled via the main module with the following arguments:

- argument 1 = <COURSENAME>
- argument 2 = <ASSIGNMENTNAME>
- argument 3 = <STUDENTNAME>
- argument 4 = <ISDETAILED>

The report program, once called by the main module with the above arguments, will first traverse to the directory housing the assignment in question and assign a variable to isDetailed and test its value (if not equal to one, set to zero). It will then remove any pre-existing files, such as a temporary input file, before proceeding. Once this is established, it makes a call to its evaluation script. The evaluation script is used to remove any extraneous verbose output to the STDOUT stream, but is considered a part of this same program/script.

Inside this evaluation script, the arguments are assigned variables (course, assignment, sName). Once these variables are assigned, the program traverses to the root assignment directory and builds the makefile contained in the specific student directory underneath the assignments root directory. Once the student submission is built using the makefile, a loop starts passing through all test cases in the tinp directory within the root assignment directory and feeds them into the newly built student program and compares the output (stored in tact within the student's student assignment directory) and texp directory (stored in the root assignment directory). This comparison determines whether the output is valid or not - if it is valid, simply increment the current test case index and test the next case. If it isn't valid, then increment the error and log the detailed error in the student's student directory in the assignment root directory. Execution of this sub-program has now ended and will return to the report program.

Upon completion of the evaluation sub-program, isDetailed will be evaluated. If 0, simply display the results of the summary.txt generated by evaluation, which shows the number of errors and number of cases ran. If 1, it will perform a less on the errors.txt formed.



Assumptions
-----------------------------------------------------------------------
-----------------------------------------------------------------------
- COURSENAME, ASSIGNMENTNAME, and STUDENTNAME will all be provided and will all be valid directories in the structure
- a makefile is provided
- tinp directory exists and is populated (test input) and texp directory exists and is populated (test - expected result)
- tact exists (test - actual result)
- the program has read, write, and execute permissions with the bin (where this program is ran) directory, and assignment + student directories under assignment
